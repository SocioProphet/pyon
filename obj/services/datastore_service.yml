# Service interface definition to front end the
# datastore library APIs

_name:
  datastore

_dependencies:
  []

create_datastore:
  in:
    datastore_name: ""
  out:

delete_datastore:
  in:
    datastore_name: ""
  out:

list_datastores:
  in:
  out:
    list: []

info_datastore:
  in:
    datastore_name: ""
  out:
    info: []

list_objects:
  in:
    datastore_name: ""
  out:
    info: []

list_object_revisions:
  in:
    object_id: ""
    datastore_name: ""
  out:
    list: []

create:
  in:
    object: {}
    datastore_name: ""
  out:

create_doc:
  in:
    object: {}
    datastore_name: ""
  out:
    tuple: ()

read:
  in:
    object_id: ""
    rev_id: ""
    datastore_name: ""
  out:
    object: {}

read_doc:
  in:
    object_id: ""
    rev_id: ""
    datastore_name: ""
  out:
    object: {}

update:
  in:
    object: {}
    datastore_name: ""
  out:
    tuple: ()

update_doc:
  in:
    object: {}
    datastore_name: ""
  out:
    tuple: ()

delete:
  in:
    object: {}
    datastore_name: ""
  out:

delete_doc:
  in:
    object: {}
    datastore_name: ""
  out:

find:
  in:
    criteria: []
    datastore_name: ""
  out:
    list: []

find_doc:
  in:
    criteria: []
    datastore_name: ""
  out:
    list: []

find_by_association:
  in:
    criteria: []
    association: ""
    datastore_name: ""
  out:
    list: []

find_by_association_doc:
  in:
    criteria: []
    association: ""
    datastore_name: ""
  out:
    list: []

resolve_association:
  in:
    tuple: ()
    datastore_name: ""
  out:
    list: []

resolve_association_doc:
  in:
    tuple: ()
    datastore_name: ""
  out:
    list: []
