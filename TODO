Current pyon TODO list:
=======================

PACKAGING/CODE:

- Automate versioning and packaging of pyon egg
- More __str__() output for classes
- Use log.info for relevant output, debug for debug level
- Rename Endpoint -> Conversation
- More consistent and fewer packages
- Refactor imports to use pyon.public as much as possible (but not in pyon core modules)

CONTAINER/STARTUP:

- Enhanced shell API
- Enhanced messaging bookkeeping: ms() more telling
- Error handling improved
- Check DotDict efficiency and where use

OBJECTS:

- Second look at service YML files (look at WSDL). Methods -> operations, maybe no objects
- Service default arguments set to {} and [] in base class. Dangerous Python idiom. Set to None? Solutions?

DATASTORE:

- Find accepting arrays of restrict values (e.g. more than one LCS)

PROCESS/SERVICE:

- Clear confusion with service vs process
- System-wide unique process ID
- Process as instance aggregating one state and multiple endpoints
- Process (greenlet) accepts messages from endpoints. One greenlet per process; one message at a time.
- Process attachment (direct or via container)
- Container support for infinite and recurring processes (in on_start)
- Extend the BinderListener so that it can dispatch into a list of service classes
- Change success: True to raised exception
- Namespace in generated interface clients not clean

AGENTS/GOVERNANCE:

- User agent?

MESSAGING:

- Messaging properties set in pyon.net
- Non-AMQP (ZeroMQ, Flask) nodes

TESTING:


OPEN QUESTIONS:


BUGS (see also Jira project CISWCORE)

- Source path from not the current repo (e.g. pyon/examples not found)
- Find result does not pass validate interceptor
